{
	"info": {
		"_postman_id": "20f7170b-fef0-4f2c-9f2e-bb40cf805403",
		"name": "WoodWing Studio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2558053"
	},
	"item": [
		{
			"name": "Workflow",
			"item": [
				{
					"name": "CreateObjects",
					"item": [
						{
							"name": "CreateObjects Digital Article",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"CreateObjects\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Lock\": false,\n            \"Objects\": [\n                {    \n                    \"MetaData\": {  \n                        \"BasicMetaData\": {\n                            \"Name\": \"test digital article file\",\n                            \"Category\": {\n                                \"Name\": \"News\",\n                                \"Id\": \"40\",\n                                \"__classname__\": \"Category\"\n                            },\n                            \"Type\": \"Article\",\n                            \"Publication\": {\n                                \"Id\": \"25\",\n                                \"Name\": \"WoodWing\",\n                                \"__classname__\": \"Publication\"\n                            },\n                            \"__classname__\": \"BasicMetaData\"\n                        },\n                        \"WorkflowMetaData\": {\n                            \"__classname__\": \"WorkflowMetaData\",\n                            \"Comment\": \"Gapp\",\n                            \"State\": {\n                                \"Id\": \"328\",\n                                \"Name\": \"Draft\",\n                                \"Type\": \"Article\",\n                                \"__classname__\": \"State\"\n                            }\n                        },\n                        \"RightsMetaData\": {\n                            \"__classname__\": \"RightsMetaData\"\n                        },\n                        \"SourceMetaData\": {\n                            \"__classname__\": \"SourceMetaData\"\n                        },\n                        \"ContentMetaData\": {\n                            \"__classname__\": \"ContentMetaData\",\n                            \"Format\": \"application/ww-digital+json\"\n                        },\n                        \"ExtraMetaData\": [\n                        \t{\n\t\t\t\t\t\t\t\t\"Property\": \"C_CS_FILEFORMATVERSION\",\n\t\t\t\t\t\t\t\t\"Values\": [\n\t\t\t\t\t\t\t\t\t\"2.4\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"__classname__\": \"ExtraMetaData\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Property\": \"C_CS_COMPONENTSET\",\n\t\t\t\t\t\t\t\t\"Values\": [\n\t\t\t\t\t\t\t\t\t\"df0afd50-9e44-4882-8324-d6e31432ce90\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"__classname__\": \"ExtraMetaData\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n                    \t\"__classname__\": \"MetaData\"\n                    },\n                    \"Files\": [\n                        {\n                            \"Rendition\": \"native\",\n                            \"Type\": \"application/ww-digital+json\",\n                            \"FileUrl\": \"{{Studio_Server_URL}}/transferindex.php?fileguid={{Uuid_For_PUT}}\",\n                            \"__classname__\": \"Attachment\"\n                        }\n                    ],\n                    \"Targets\": [\n                        {\n                            \"PubChannel\":{\n                                \"Id\":\"\",\n                                \"Name\":\"\"\n                            },\n                            \"Issue\":{\n                                \"Id\":\"\",\n                                \"Name\":\"\",\n                                \"OverrulePublication\":false\n                            },\n                            \"Editions\":{\n                            },\n                            \"__classname__\": \"Targets\"\n                        }\n\n                    ],\n                \"__classname__\": \"Object\"\n                }\n                \n            ]\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"index.php"
									],
									"query": [
										{
											"key": "protocol",
											"value": "JSON"
										}
									]
								},
								"description": "This HTTP POST request is used to create objects by sending a payload to the specified endpoint. The request is made to the {{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON URL with a JSON payload in the raw request body.\n\n### Request Body\n\n- method (string): Specifies the method as \"CreateObjects\".\n    \n- id (string): Represents the ID as \"33\".\n    \n- params (array): Contains an array of parameters including \"Ticket\", \"Lock\", and \"Objects\".\n    \n    - Ticket (string): Represents the ticket value, which is a placeholder.\n        \n    - Lock (boolean): Indicates whether the object is locked or not.\n        \n    - Objects (array): Contains an array of objects with metadata and files.\n        \n        - MetaData (object): Contains various metadata properties such as BasicMetaData, WorkflowMetaData, RightsMetaData, SourceMetaData, ContentMetaData, and ExtraMetaData.\n            \n        - Files (array): Contains an array of files with properties like Rendition, Type, and FileUrl.\n            \n    - jsonrpc (string): Specifies the JSON-RPC version as \"2.0\".\n        \n\n### Response\n\nThe response to this request will contain the result of the \"CreateObjects\" method call, along with any relevant data or error messages."
							},
							"response": []
						},
						{
							"name": "CreateObjects Task with Targets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is 'application/json'\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include('application/json');",
											"});",
											"",
											"",
											"pm.test(\"Validate the structure of the 'result' object\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('object');",
											"",
											"    // Additional checks for specific properties within the 'result' object can be added here",
											"});",
											"",
											"",
											"pm.test(\"Objects array is present and contains expected number of elements\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.result.Objects).to.be.an('array');",
											"    pm.expect(responseData.result.Objects).to.have.lengthOf(1);",
											"});",
											"",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"  pm.expect(pm.response.responseTime).to.be.below(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"CreateObjects\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Lock\": false,\n            \"Objects\": [\n                {    \n                    \"MetaData\": {  \n                        \"BasicMetaData\": {\n                            \"Name\": \"test task\",\n                            \"Category\": {\n                                \"Name\": \"News\",\n                                \"Id\": \"40\",\n                                \"__classname__\": \"Category\"\n                            },\n                            \"Type\": \"Task\",\n                            \"Publication\": {\n                                \"Id\": \"25\",\n                                \"Name\": \"WoodWing\",\n                                \"__classname__\": \"Publication\"\n                            },\n                            \"__classname__\": \"BasicMetaData\"\n                        },\n                        \"WorkflowMetaData\": {\n                            \"__classname__\": \"WorkflowMetaData\",\n                            \"Comment\": \"Gapp\",\n                            \"State\": {\n                                \"Id\": \"351\",\n                                \"Name\": \"Assigned\",\n                                \"Type\": \"Task\",\n                                \"__classname__\": \"State\"\n                            }\n                        },\n                        \"RightsMetaData\": {\n                            \"__classname__\": \"RightsMetaData\"\n                        },\n                        \"SourceMetaData\": {\n                            \"__classname__\": \"SourceMetaData\"\n                        },\n                        \"ContentMetaData\": {\n                            \"__classname__\": \"ContentMetaData\"\n                        },\n                        \"ExtraMetaData\": [\n\t\t\t\t\t\t],\n                    \t\"__classname__\": \"MetaData\"\n                    },\n                    \"Targets\": [\n                        {\n                            \"PubChannel\": {\n                                \"Id\": \"17\",\n                                \"Name\":\"Print\",\n                                \"__classname__\":\"PubChannel\"\n                            },\n                            \"Issue\": {\n                                \"Id\": \"41\",\n                                \"Name\":\"Week 1\",\n                                \"OverrulePublication\":null,\n                                \"__classname__\":\"Issue\"\n                            },\n                            \"Editions\": null,\n                            \"PublishedDate\":null,\n                            \"PublishedVersion\":null,\n                            \"__classname__\":\"Target\"\n                        }\n                    ],\n                \"__classname__\": \"Object\"\n                }\n                \n            ]\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"index.php"
									],
									"query": [
										{
											"key": "protocol",
											"value": "JSON"
										}
									]
								},
								"description": "The HTTP POST request to the specified URL is used to send a payload in JSON format. The request includes parameters such as method, id, Ticket, Lock, Objects, and more. The payload is sent to the server with the aim of performing a specific action, which is determined by the provided parameters.\n\nThe response to this request is a JSON object with a status code of 200 and a content type of application/json. The response contains an \"id\" and a \"result\" object, which includes various nested properties such as MetaData, RightsMetaData, SourceMetaData, ContentMetaData, WorkflowMetaData, and more. Each of these properties contains further nested attributes with specific data types.\n\nThe JSON schema for the response can be documented based on the structure of the \"result\" object and its nested properties, including the data types and possible values for each attribute.\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\"type\": \"string\"},\n    \"result\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Objects\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"MetaData\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  // Nested properties and data types\n                }\n              },\n              // Other nested properties within \"Objects\"\n            }\n          }\n        },\n        // Other properties within \"result\"\n      }\n    }\n  }\n}\n\n ```"
							},
							"response": []
						}
					]
				},
				{
					"name": "CreateObjectOperations",
					"item": [
						{
							"name": "PlaceDossier - PrintArticle",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"CreateObjectOperations\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"HaveVersion\": {\n                \"ID\": \"13129\", //objectId of layout\n                \"Version\": \"0.69\", //object version\n                \"__classname__\": \"ObjectVersion\"\n            },\n            \"Operations\": [\n                {\n                    \"Id\": \"10be2025-9e15-4a4d-8af0-899808b9b03a\", //generated GUID\n                    \"Name\": \"PlaceDossier\", //Name of operation: PlaceDossier, PlaceImage, PlaceArticleElement, ClearFrameContent, PlaceDigitalArticle\n                    \"Type\": \"AutomatedPrintWorkflow\", //Type: AutomatedPrintWorkflow, ContentStationDigitalEditor\n                    \"Params\": [\n                        {\n                            \"Name\": \"EditionId\",\n                            \"Value\": 0,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"DossierId\",\n                            \"Value\": 13130,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"InDesignArticleId\",\n                            \"Value\": 733,\n                            \"__classname__\": \"Param\"\n                        }\n                    ],\n                    \"__classname__\": \"ObjectOperation\"\n                }\n            ]\n        }\n                \n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"index.php"
									],
									"query": [
										{
											"key": "protocol",
											"value": "JSON"
										}
									]
								},
								"description": "### CreateObjectOperations Request\n\nThis endpoint allows you to create object operations using the specified parameters.\n\n#### Description\n\nThis call takes the ID and version of the layout that you want to place the article onto plus the ID of the Dossier AND the InDesign article ID and put an article in the Dossier onto the layout. Note that\n\n#### Request Body\n\n- `jsonrpc` (string): The JSON-RPC version being used.\n    \n- `method` (string): The method to be executed, in this case, \"CreateObjectOperations\".\n    \n- `id` (string): The identifier for the request.\n    \n- `params` (array): An array containing the parameters for creating object operations, including the ticket, version, and operations.\n    \n\n#### Operations\n\n- `Ticket` (string): The current ticket for authentication.\n    \n- `HaveVersion` (object): Contains the ID, version, and class name of the layout.\n    \n- `Operations` (array): An array of operations to be performed, including the ID, name, type, and parameters.\n    \n\n#### Response\n\nThe response will be in JSON format and will include the following schema:\n\n``` json\n{\n  \"id\": \"\",\n  \"result\": {\n    \"Operations\": [\n      {\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Params\": [\n          {\n            \"Name\": \"\",\n            \"Value\": 0,\n            \"__classname__\": \"\"\n          }\n        ],\n        \"__classname__\": \"\"\n      }\n    ],\n    \"Reports\": [],\n    \"__classname__\": \"\"\n  },\n  \"jsonrpc\": \"\"\n}\n\n ```\n\nThe response will contain the ID, name, type, and parameters of the operations performed."
							},
							"response": []
						},
						{
							"name": "PlaceDigitalArticle",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"CreateObjectOperations\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"HaveVersion\": {\n                \"ID\": \"13686\", //objectId of layout\n                \"Version\": \"0.2\", //object version\n                \"__classname__\": \"ObjectVersion\"\n            },\n            \"Operations\": [\n                {\n                    \"__classname__\": \"ObjectOperation\",\n                    \"Id\": \"10be2025-9e15-4a4d-8af0-899808b9b03d\", //generated GUID\n                    \"Name\": \"PlaceDigitalArticle\", //Name of operation: PlaceDossier, PlaceImage, PlaceArticleElement, ClearFrameContent, PlaceDigitalArticle\n                    \"Type\": \"ContentStationDigitalEditor\", //Type: AutomatedPrintWorkflow, ContentStationDigitalEditor\n                    \"Params\": [\n                        {\n                            \"Name\": \"EditionId\",\n                            \"Value\": \"0\",\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"ArticleId\",\n                            \"Value\": \"13685\", //ID of the Digital Article object\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"InDesignArticleId\", //ID of the ID article, use GetObjects call to get the ID\n                            \"Value\": \"6979\",\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"ConversionRuleSetId\", //Currently there is no public way to get this data via API. Have to use loggin\n                            \"Value\": \"162\",\n                            \"__classname__\": \"Param\"  \n                        }\n                    ]\n                }\n            ]\n        }\n                \n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"index.php"
									],
									"query": [
										{
											"key": "protocol",
											"value": "JSON"
										}
									]
								},
								"description": "### CreateObjectOperations Request\n\nThis endpoint allows you to create object operations using the specified parameters.\n\n#### Description\n\nThis call takes the ID and version of the layout that you want to place the article onto plus the ID of the Dossier AND the InDesign article ID and put an article in the Dossier onto the layout. Note that\n\n#### Request Body\n\n- `jsonrpc` (string): The JSON-RPC version being used.\n    \n- `method` (string): The method to be executed, in this case, \"CreateObjectOperations\".\n    \n- `id` (string): The identifier for the request.\n    \n- `params` (array): An array containing the parameters for creating object operations, including the ticket, version, and operations.\n    \n\n#### Operations\n\n- `Ticket` (string): The current ticket for authentication.\n    \n- `HaveVersion` (object): Contains the ID, version, and class name of the layout.\n    \n- `Operations` (array): An array of operations to be performed, including the ID, name, type, and parameters.\n    \n\n#### Response\n\nThe response will be in JSON format and will include the following schema:\n\n``` json\n{\n  \"id\": \"\",\n  \"result\": {\n    \"Operations\": [\n      {\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Params\": [\n          {\n            \"Name\": \"\",\n            \"Value\": 0,\n            \"__classname__\": \"\"\n          }\n        ],\n        \"__classname__\": \"\"\n      }\n    ],\n    \"Reports\": [],\n    \"__classname__\": \"\"\n  },\n  \"jsonrpc\": \"\"\n}\n\n ```\n\nThe response will contain the ID, name, type, and parameters of the operations performed."
							},
							"response": []
						},
						{
							"name": "PlaceArticleElement",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"CreateObjectOperations\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"HaveVersion\": {\n                \"ID\": \"13129\", //objectId of layout\n                \"Version\": \"0.50\", //object version\n                \"__classname__\": \"ObjectVersion\"\n            },\n            \"Operations\": [\n                {\n                    \"Id\": \"10be2025-9e15-4a4d-8af0-899808b9b03a\", //generated GUID\n                    \"Name\": \"PlaceArticleElement\", \n                    \"Type\": \"AutomatedPrintWorkflow\", //Type: AutomatedPrintWorkflow, ContentStationDigitalEditor\n                    \"Params\": [\n                        {\n                            \"Name\": \"EditionId\",\n                            \"Value\": 0,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"ArticleId\",\n                            \"Value\": 13130,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"ElementId\",\n                            \"Value\": 733,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"SplineId\",\n                            \"Value\": 733,\n                            \"__classname__\": \"Param\"\n                        }\n                    ],\n                    \"__classname__\": \"ObjectOperation\"\n                }\n            ]\n        }\n                \n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"index.php"
									],
									"query": [
										{
											"key": "protocol",
											"value": "JSON"
										}
									]
								},
								"description": "This HTTP POST request is used to create object operations by sending a JSON payload to the specified endpoint. The request body includes parameters such as \"jsonrpc\", \"method\", \"id\", and \"params\" to specify the ticket, object version, operations, and their respective parameters.\n\n### Request Body\n\n- `jsonrpc` (string): The JSON-RPC version.\n    \n- `method` (string): The method for creating object operations.\n    \n- `id` (string): The identifier for the request.\n    \n- `params` (array): An array containing the ticket, object version, and operations details.\n    \n    - `Ticket` (string): The current ticket.\n        \n    - `HaveVersion` (object): Contains the ID, version, and class name of the object version.\n        \n        - `ID` (string): The object ID of the layout.\n            \n        - `Version` (string): The object version.\n            \n        - `__classname__` (string): The class name of the object version.\n            \n    - `Operations` (array): An array of operations details.\n        \n        - `Id` (string): The generated GUID for the operation.\n            \n        - `Name` (string): The name of the operation.\n            \n        - `Type` (string): The type of the operation, which can be \"AutomatedPrintWorkflow\" or \"ContentStationDigitalEditor\".\n            \n        - `Params` (array): An array of parameters for the operation.\n            \n            - `Name` (string): The name of the parameter.\n                \n            - `Value` (string/number): The value of the parameter.\n                \n            - `__classname__` (string): The class name of the parameter.\n                \n\n### Response Body\n\nThe response body for this request will contain the result of the object operations creation, including any relevant data or error messages."
							},
							"response": []
						},
						{
							"name": "PlaceImage",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"CreateObjectOperations\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"HaveVersion\": {\n                \"ID\": \"13129\", //objectId of layout\n                \"Version\": \"0.56\", //object version\n                \"__classname__\": \"ObjectVersion\"\n            },\n            \"Operations\": [\n                {\n                    \"Id\": \"10be2025-9e15-4a4d-8af0-899808b9b03b\", //generated GUID\n                    \"Name\": \"PlaceImage\", //Name of operation: PlaceDossier, PlaceImage, PlaceArticleElement, ClearFrameContent, PlaceDigitalArticle\n                    \"Type\": \"AutomatedPrintWorkflow\", //Type: AutomatedPrintWorkflow, ContentStationDigitalEditor\n                    \"Params\": [\n                        {\n                            \"Name\": \"EditionId\",\n                            \"Value\": 0,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"ImageId\",\n                            \"Value\": 13136,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"SplineId\",\n                            \"Value\": 961,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"ContentDx\",\n                            \"Value\": 0,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"ContentDy\",\n                            \"Value\": 0,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"ScaleX\",\n                            \"Value\": 0,\n                            \"__classname__\": \"Param\"\n                        },\n                                                {\n                            \"Name\": \"ScaleY\",\n                            \"Value\": 0,\n                            \"__classname__\": \"Param\"\n                        }\n                    ],\n                    \"__classname__\": \"ObjectOperation\"\n                }\n            ]\n        }\n                \n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"index.php"
									],
									"query": [
										{
											"key": "protocol",
											"value": "JSON"
										}
									]
								},
								"description": "### CreateObjectOperations\n\nThis endpoint is used to create object operations with the provided parameters.\n\n#### Request\n\n- Method: POST\n    \n- URL: `{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- Body:\n    \n    - { \"jsonrpc\": \"2.0\", \"method\": \"CreateObjectOperations\", \"id\": \"33\", \"params\": \\[ { \"Ticket\": \"{{Current_Ticket}}\", \"HaveVersion\": { \"ID\": \"13129\", \"Version\": \"0.56\", \"__classname__\": \"ObjectVersion\" }, \"Operations\": \\[ { \"Id\": \"10be2025-9e15-4a4d-8af0-899808b9b03b\", \"Name\": \"PlaceImage\", \"Type\": \"AutomatedPrintWorkflow\", \"Params\": \\[ { \"Name\": \"EditionId\", \"Value\": 0, \"__classname__\": \"Param\" }, { \"Name\": \"ImageId\", \"Value\": 13136, \"__classname__\": \"Param\" }, { \"Name\": \"SplineId\", \"Value\": 961, \"__classname__\": \"Param\" }, { \"Name\": \"ContentDx\", \"Value\": 0, \"__classname__\": \"Param\" }, { \"Name\": \"ContentDy\", \"Value\": 0, \"__classname__\": \"Param\" }, { \"Name\": \"ScaleX\", \"Value\": 0, \"__classname__\": \"Param\" }, { \"Name\": \"ScaleY\", \"Value\": 0, \"__classname__\": \"Param\" } \\], \"__classname__\": \"ObjectOperation\" } \\] } \\]}\n        \n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n- { \"type\": \"object\", \"properties\": { \"id\": {\"type\": \"string\"}, \"result\": { \"type\": \"object\", \"properties\": { \"Operations\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"properties\": { \"Id\": {\"type\": \"string\"}, \"Name\": {\"type\": \"string\"}, \"Type\": {\"type\": \"string\"}, \"Params\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"properties\": { \"Name\": {\"type\": \"string\"}, \"Value\": {\"type\": \"number\"}, \"__classname__\": {\"type\": \"string\"} } } }, \"__classname__\": {\"type\": \"string\"} } } }, \"Reports\": {\"type\": \"array\"}, \"__classname__\": {\"type\": \"string\"} } }, \"jsonrpc\": {\"type\": \"string\"} } }"
							},
							"response": []
						},
						{
							"name": "Clear Frame Content",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"CreateObjectOperations\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"HaveVersion\": {\n                \"ID\": \"13129\", //objectId of layout\n                \"Version\": \"0.18\", //object version\n                \"__classname__\": \"ObjectVersion\"\n            },\n            \"Operations\": [\n                {\n                    \"Id\": \"10be2025-9e15-4a4d-8af0-899808b9b03a\", //generated GUID\n                    \"Name\": \"ClearFrameContent\", //Name of operation: PlaceDossier, PlaceImage, PlaceArticleElement, ClearFrameContent, PlaceDigitalArticle\n                    \"Type\": \"AutomatedPrintWorkflow\", //Type: AutomatedPrintWorkflow, ContentStationDigitalEditor\n                    \"Params\": [\n                        {\n                            \"Name\": \"EditionId\",\n                            \"Value\": 0,\n                            \"__classname__\": \"Param\"\n                        },\n                        {\n                            \"Name\": \"SplineId\",\n                            \"Value\": 703,\n                            \"__classname__\": \"Param\"\n                        }\n                    ],\n                    \"__classname__\": \"ObjectOperation\"\n                }\n            ]\n        }\n                \n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"index.php"
									],
									"query": [
										{
											"key": "protocol",
											"value": "JSON"
										}
									]
								},
								"description": "### CreateObjectOperations\n\nThis endpoint is used to create object operations with the provided parameters.\n\n#### Request Body\n\n- `jsonrpc` (string): The JSON-RPC version.\n    \n- `method` (string): The method name, in this case, \"CreateObjectOperations\".\n    \n- `id` (string): The ID of the request.\n    \n- `params` (array): An array of parameters containing the ticket, version, and operations details.\n    \n\nExample:\n\n``` json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"CreateObjectOperations\",\n  \"id\": \"33\",\n  \"params\": [\n    {\n      \"Ticket\": \"{{Current_Ticket}}\",\n      \"HaveVersion\": {\n        \"ID\": \"13129\",\n        \"Version\": \"0.18\",\n        \"__classname__\": \"ObjectVersion\"\n      },\n      \"Operations\": [\n        {\n          \"Id\": \"10be2025-9e15-4a4d-8af0-899808b9b03a\",\n          \"Name\": \"ClearFrameContent\",\n          \"Type\": \"AutomatedPrintWorkflow\",\n          \"Params\": [\n            {\n              \"Name\": \"EditionId\",\n              \"Value\": 0,\n              \"__classname__\": \"Param\"\n            },\n            {\n              \"Name\": \"SplineId\",\n              \"Value\": 703,\n              \"__classname__\": \"Param\"\n            }\n          ],\n          \"__classname__\": \"ObjectOperation\"\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\n#### Response\n\n- `id` (string): The ID of the response.\n    \n- `result` (object): The result object containing operations and reports.\n    \n    - `Operations` (array): An array of operations with their details.\n        \n    - `Reports` (array): An array of reports.\n        \n    - `__classname__` (string): The class name of the result object.\n        \n- `jsonrpc` (string): The JSON-RPC version.\n    \n\nExample:\n\n``` json\n{\n  \"id\": \"\",\n  \"result\": {\n    \"Operations\": [\n      {\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Params\": [\n          {\n            \"Name\": \"\",\n            \"Value\": 0,\n            \"__classname__\": \"\"\n          }\n        ],\n        \"__classname__\": \"\"\n      }\n    ],\n    \"Reports\": [],\n    \"__classname__\": \"\"\n  },\n  \"jsonrpc\": \"\"\n}\n\n ```"
							},
							"response": []
						}
					]
				},
				{
					"name": "Objects and Targets",
					"item": [
						{
							"name": "CreateObjectTargets",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"CreateObjectTargets\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"IDs\":[\"13460\"], // this can be an array of IDs\n            \"Targets\": [\n                {\n                    \"PubChannel\": {\n                        \"Id\": \"17\",\n                        \"Name\":\"Print\",\n                        \"__classname__\":\"PubChannel\"\n                    },\n                    \"Issue\": {\n                        \"Id\": \"41\",\n                        \"Name\":\"Week 1\",\n                        \"OverrulePublication\":null,\n                        \"__classname__\":\"Issue\"\n                    },\n                    \"Editions\": null,\n                    \"PublishedDate\":null,\n                    \"PublishedVersion\":null,\n                    \"__classname__\":\"Target\"\n                }\n            ]\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"index.php"
									],
									"query": [
										{
											"key": "protocol",
											"value": "JSON"
										}
									]
								},
								"description": "### CreateObjectTargets\n\nThis endpoint allows the client to create object targets using the specified parameters.\n\n#### Request Body\n\n- method (string): The method being called, in this case, \"CreateObjectTargets\".\n    \n- id (string): The identifier for the request, in this case, \"33\".\n    \n- params (array): An array of parameters containing the ticket, IDs, and targets.\n    \n    - Ticket (string): The current ticket for authentication.\n        \n    - IDs (array): An array of IDs for the targets.\n        \n    - Targets (array): An array of target objects containing details about the publication channel, issue, editions, published date, and published version.\n        \n\n#### Response\n\nThe response is in the form of a JSON schema.\n\n``` json\n{\n  \"id\": \"\",\n  \"result\": {\n    \"IDs\": [\"\"],\n    \"Targets\": [\n      {\n        \"PubChannel\": {\n          \"Id\": \"\",\n          \"Name\": \"\",\n          \"__classname__\": \"\"\n        },\n        \"Issue\": {\n          \"Id\": \"\",\n          \"Name\": \"\",\n          \"OverrulePublication\": null,\n          \"__classname__\": \"\"\n        },\n        \"Editions\": [],\n        \"PublishedDate\": null,\n        \"PublishedVersion\": null,\n        \"__classname__\": \"\"\n      }\n    ],\n    \"__classname__\": \"\"\n  },\n  \"jsonrpc\": \"\"\n}\n\n ```\n\nThe response schema includes empty values for the IDs, PubChannel, Issue, Editions, PublishedDate, and PublishedVersion."
							},
							"response": []
						}
					]
				},
				{
					"name": "LogOn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"LogOn\",\n\t\"id\": \"1\",\n\t\"Params\": {\n\t\t\"req\": {\n\t\t\t\"User\":\"{{User_Name}}\",\n\t\t\t\"Password\":\"{{Password}}\",\n\t\t\t\"ClientName\":\"postman\",\n\t\t\t\"ClientAppName\":\"postman_sample_requests\",\n            \"ClientAppVersion\":\"1.0\",\n            \"ClientAppSerial\":\"\",\n            \"RequestInfo\":[\"ServerInfo\"],\n\t\t\t\"__classname__\":\"WflLogOnRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}"
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This endpoint makes an HTTP POST request to the specified URL with the provided payload. The request body contains a JSON object with the \"method\", \"id\", and \"Params\" fields. The \"Params\" field further contains a \"req\" object with various parameters such as \"User\", \"Password\", \"ClientName\", \"ClientAppName\", \"ClientAppVersion\", \"ClientAppSerial\", and \"RequestInfo\". The \"**classname**\" field is also present in the \"req\" object.\n\nThe user has requested to document the response of this request as a JSON schema."
					},
					"response": []
				},
				{
					"name": "QueryObjects",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"QueryObjects\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"Params\": [\t\n\t\t\t\t\t\t{ \"__classname__\": \"QueryParam\", \"Property\": \"Type\", \"Operation\": \"=\", \"Value\": \"Layout\" }\n\t\t\t\t\t],\n\t\t\t\t\t\"FirstEntry\": null,\n\t\t\t\t\t\"MaxEntries\": null,\n\t\t\t\t\t\"Hierarchical\": false,\n\t\t\t\t\t\"MinimalProps\": [   \"ID\", \n\t\t\t\t\t\t\t\t\t    \"Type\",\n\t\t\t\t\t\t\t\t\t\t\"Name\"\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\"RequestProps\": [   \"ID\", \n\t\t\t\t\t\t\t\t\t    \"Type\",\n\t\t\t\t\t\t\t\t\t\t\"Name\"\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\"Areas\": null,\n\t\t\t\t\t\"GetObjectMode\": false,\n                    \"__classname__\": \"WflQueryObjectsRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### Endpoint Description\n\nThis endpoint is a POST request to the specified URL and directory with the protocol parameter set to JSON. It is used to send a request with a specific payload and expects a response.\n\n### Request Body\n\n- The request body should be in raw format and should include the following parameters:\n    \n    - method (string): The method to be executed.\n        \n    - id (string): The identifier for the request.\n        \n    - params (object): An object containing the request parameters.\n        \n        - req (object): The main request object.\n            \n            - Ticket (string): A ticket for authorization.\n                \n            - Params (array): An array of parameters with classname, property, operation, and value.\n                \n            - FirstEntry (null): Indicates the first entry.\n                \n            - MaxEntries (null): Indicates the maximum number of entries.\n                \n            - Hierarchical (boolean): Specifies if the request is hierarchical.\n                \n            - MinimalProps (array): An array of minimal properties.\n                \n            - RequestProps (array): An array of request properties.\n                \n            - Areas (null): Indicates the areas.\n                \n            - GetObjectMode (boolean): Specifies the object mode.\n                \n            - **classname** (string): The class name for the request.\n                \n\n### Response\n\nThe response to this request will vary based on the specific method and parameters provided in the request body. It is expected to be in JSON format and will contain the result of the requested method execution."
					},
					"response": []
				},
				{
					"name": "GetObjects",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"GetObjects\",\n    \"id\": \"2\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"IDs\": [\n                \"{{Object_ID}}\"\n            ],\n            \"Lock\": false,\n            \"Rendition\": \"native\",\n            \"RequestInfo\": [\n                \"Pages\", \"Targets\", \"Files\", \"Relations\"\n            ],\n            \"HaveVersions\": [],\n            \"Areas\": null,\n            \"EditionId\": \"\",\n            \"SupportedContentSources\": [],\n            \"__classname__\": \"WflGetObjectsRequest\"\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to send a payload to the specified endpoint. The request body is in raw format and contains a JSON object with the keys \"method\", \"id\", \"params\", and \"jsonrpc\". The \"method\" key specifies the method to be executed, and the \"params\" key holds an array of parameters including \"Ticket\", \"IDs\", \"Lock\", \"Rendition\", \"RequestInfo\", \"HaveVersions\", \"Areas\", \"EditionId\", \"SupportedContentSources\", and \"**classname**\". The \"id\" key is used to identify the request, and the \"jsonrpc\" key specifies the JSON-RPC version.\n\nUpon successful execution, the response will contain the result of the requested method along with any relevant data."
					},
					"response": []
				},
				{
					"name": "SaveObjects",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"SaveObjects\",\n    \"id\": \"2\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"CreateVersion\": false,\n            \"ForceCheckIn\": false\n            \"Unlock\": false,\n            \"Rendition\": \"native\",\n            \"RequestInfo\": [\n                \"Relations\",\n                \"PagesInfo\",\n                \"InDesignArticles\"\n            ],\n            \"HaveVersions\": [],\n            \"Areas\": null,\n            \"EditionId\": \"\",\n            \"SupportedContentSources\": [],\n            \"__classname__\": \"WflSaveObjectsRequest\"\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to save objects by sending a payload to the specified endpoint. The request body is in raw format and contains a JSON object with parameters such as method, id, and params. The \"method\" parameter specifies the action to be performed, while the \"params\" array includes various attributes for the save operation. The \"jsonrpc\" parameter indicates the JSON-RPC version used for the request.\n\nThe response to this request will include the result of the save operation, providing information about the success or failure of the action along with any relevant data."
					},
					"response": []
				},
				{
					"name": "CopyObject",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"CopyObject\",\n    \"id\": \"2\",\n    \"params\": [\n        {\n            \n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"SourceID\": \"{{Object_ID}}\",\n            \"MetaData\":{\n                \"BasicMetaData\": {\n                    \"Name\": \"copied layout\",\n                    \"Category\": {\n                        \"Name\": \"News\",\n                        \"Id\": \"40\",\n                        \"__classname__\": \"Category\"\n                    },\n                    \"Type\": \"Layout\",\n                    \"Publication\": {\n                        \"Id\": \"25\",\n                        \"Name\": \"WoodWing\",\n                        \"__classname__\": \"Publication\"\n                    },\n                    \"__classname__\": \"BasicMetaData\"\n                },\n                \"WorkflowMetaData\": {\n                    \"Comment\": \"\",\n                    \"State\": {\n                        \"Id\": \"341\",\n                        \"Name\": \"Draft\",\n                        \"Type\": \"Layout\",\n                        \"__classname__\": \"State\"\n                    },\n                    \"__classname__\": \"WorkflowMetaData\"\n                },\n                \"RightsMetaData\": {\n                    \"__classname__\": \"RightsMetaData\"\n                },\n                \"SourceMetaData\": {\n                    \"__classname__\": \"SourceMetaData\"\n                },\n                \"ContentMetaData\": {\n                    \"Format\": \"application/indesign\",\n                    \"__classname__\": \"ContentMetaData\"\n                },\n                \"ExtraMetaData\": null,\n                \"__classname__\":\"MetaData\"\n            },\n            \"Targets\":[{\n                \"PubChannel\": {\n                    \"Id\": \"17\",\n                    \"Name\": \"Print\",\n                    \"__classname__\": \"PubChannel\"\n                },\n                \"Issue\": {\n                    \"Id\": \"41\",\n                    \"Name\": \"Week 1\",\n                    \"OverrulePublication\": null,\n                    \"__classname__\": \"Issue\"\n                },\n                \"Editions\": null,\n                \"PublishedDate\": null,\n                \"PublishedVersion\": null,\n                \"__classname__\": \"Target\"\n                }],\n            \"Relations\":[{\n                \"Parent\": \"14765\",\n                \"Type\": \"Contained\",\n                \"__classname__\": \"Relation\"\n            }],\n            \"__classname__\": \"Object\"\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n    \n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to save objects by sending a payload to the specified endpoint. The request body is in raw format and contains a JSON object with parameters such as method, id, and params. The \"method\" parameter specifies the action to be performed, while the \"params\" array includes various attributes for the save operation. The \"jsonrpc\" parameter indicates the JSON-RPC version used for the request.\n\nThe response to this request will include the result of the save operation, providing information about the success or failure of the action along with any relevant data."
					},
					"response": []
				},
				{
					"name": "SetObjectProperties",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"SetObjectProperties\",\n    \"id\": \"1\",\n    \"params\": [{\n        \"Ticket\": \"{{Current_Ticket}}\",\n        \"ID\": \"6\",\n        \"MetaData\": {\n            \"BasicMetaData\": null,\n            \"RightsMetaData\": null,\n            \"SourceMetaData\": null,\n            \"ContentMetaData\": null,\n            \"WorkflowMetaData\": {\n                \"__classname__\": \"WorkflowMetaData\",\n                \"State\": {\n                   \"__classname__\": \"State\",\n                    \"Id\": \"6\",\n                    \"Name\": \"Images\"\n                }\n            },\n            \"ExtraMetaData\": null,\n        \"__classname__\": \"MetaData\"\n        },\n        \"Targets\": [{\n                \"PubChannel\": {\n                    \"Id\": \"3\",\n                    \"Name\": \"Other\",\n                    \"__classname__\": \"PubChannel\"\n                },\n                \"Issue\": {\n                    \"Id\": \"4\",\n                    \"Name\": \"Other Issue\",\n                    \"OverrulePublication\": null,\n                    \"Sections\": null,\n                    \"States\": null,\n                    \"Editions\": null,\n                    \"Description\": null,\n                    \"Subject\": null,\n                    \"PublicationDate\": null,\n                    \"ReversedRead\": null,\n                    \"__classname__\": \"Issue\"\n                },\n                \"Editions\": [ ],\n                \"Published date\": null,\n                \"Published version\": null,\n                \"Classname\": \"Target\"\n            }],\n        \"__classname__\": \"WflSetObjectPropertiesRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "The HTTP POST request to `{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON` is used to send a payload in order to set object properties. The payload includes a method to set object properties, an ID, and various parameters such as Ticket, ID, MetaData, and Targets. The request body is in raw JSON format and contains specific details related to the object properties being set.\n\n### Response\n\nThe response of this request is a JSON schema. The structure of the response will follow a predefined schema format and will include the properties and their data types as per the response from the server."
					},
					"response": []
				},
				{
					"name": "SetObjectProperties Custom Field",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"SetObjectProperties\",\n    \"id\": \"1\",\n    \"params\": [{\n        \"Ticket\": \"{{Current_Ticket}}\",\n        \"ID\": \"{{Object_ID}}\",\n        \"MetaData\": {\n            \"BasicMetaData\": null,\n            \"RightsMetaData\": null,\n            \"SourceMetaData\": null,\n            \"ContentMetaData\": null,\n            \"WorkflowMetaData\": {\n                \"Comment\": \"This is my comment\",\n                \"__classname__\": \"WorkflowMetaData\"\n            },\n            \"ExtraMetaData\": [{\n            \t\"Property\": \"C_TW_COLLECTION_ID\",\n                \"Values\": [\"sent to twitter\"],\n            \t\"__classname__\": \"ExtraMetaData\"\n            }],\n        \"__classname__\": \"MetaData\"\n        },\n        \"Targets\": null,\n        \"__classname__\": \"WflSetObjectPropertiesRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to send a request to set object properties to the specified server directory in JSON format. The request payload includes a method to set object properties, along with various parameters such as Ticket, ID, MetaData, and Targets. The MetaData parameter consists of BasicMetaData, RightsMetaData, SourceMetaData, ContentMetaData, WorkflowMetaData, and ExtraMetaData, each with their respective values. The user also wants to document the response of this request as a JSON schema."
					},
					"response": []
				},
				{
					"name": "GetPublications",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"GetPublications\",\n    \"id\": \"1\",\n    \"params\": [{\n        \"Ticket\": \"{{Current_Ticket}}\",\n        \"IDs\": null,\n        \"RequestInfo\": [\"PubChannels\"],\n        \"__classname__\": \"WflGetPublicationsRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to send a payload to the specified endpoint. The request body is in raw format and contains a JSON payload with the method \"GetPublications\", an ID, and additional parameters. The \"Ticket\" parameter is expected to be replaced with a specific value, and the \"RequestInfo\" parameter includes \"PubChannels\". The \"**classname**\" parameter is also included in the request.\n\nThe response body for this request will contain the result of the \"GetPublications\" method call, along with any relevant data based on the provided parameters."
					},
					"response": []
				},
				{
					"name": "GetStates",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"GetStates\",\n    \"id\": \"1\",\n    \"params\": [{\n        \"Ticket\": \"{{Current_Ticket}}\",\n        \"ID\": \"\",\n        \"Publication\": \"17\",\n        \"Issue\": null,\n        \"Section\": null,\n        \"Type\":\"Layout\",\n        \"__classname__\": \"WflGetStatesRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### POST\n\nThis endpoint is used to make a POST request to retrieve states using a specific method.\n\n#### Request Body\n\n- **method** (string, required): Specifies the method as \"GetStates\".\n    \n- **id** (string, required): An identifier for the request.\n    \n- **params** (array, required): An array of parameters including \"Ticket\", \"ID\", \"Publication\", \"Issue\", \"Section\", \"Type\", and \"**classname**\".\n    \n    - **Ticket** (string, required): Represents the current ticket.\n        \n    - **ID** (string, optional): Represents the ID.\n        \n    - **Publication** (string, required): Specifies the publication.\n        \n    - **Issue** (null, optional): Represents the issue.\n        \n    - **Section** (null, optional): Represents the section.\n        \n    - **Type** (string, required): Specifies the type as \"Layout\".\n        \n    - **classname** (string, required): Represents the class name as \"WflGetStatesRequest\".\n        \n- **jsonrpc** (string, required): Specifies the JSON-RPC version as \"2.0\".\n    \n\n#### Response (JSON Schema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"result\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"state\": { \"type\": \"string\" },\n          \"code\": { \"type\": \"integer\" }\n        },\n        \"required\": [\"state\", \"code\"]\n      }\n    },\n    \"id\": { \"type\": \"string\" },\n    \"jsonrpc\": { \"type\": \"string\" }\n  },\n  \"required\": [\"result\", \"id\", \"jsonrpc\"]\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "DeleteObjects",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"DeleteObjects\",\n    \"id\": \"2\",\n    \"params\": [{\n        \"Ticket\": \"{{Current_Ticket}}\",\n        \"IDs\": [\"{{Object_ID}}\"],\n        \"Permanent\": false,\n        \"Areas\": [\"Workflow\"],\n        \"Context\": \"\",\n        \"__classname__\": \"WflDeleteObjectsRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "## POST\n\nThis endpoint allows you to send a POST request to delete objects using the specified parameters.\n\n### Request Body\n\n- **method** (string) - Specifies the method as \"DeleteObjects\".\n    \n- **id** (string) - Specifies the ID as \"2\".\n    \n- **params** (array) - Contains the parameters for the deletion operation.\n    \n    - **Ticket** (string) - Represents the ticket for authorization.\n        \n    - **IDs** (array) - Contains the IDs of the objects to be deleted.\n        \n    - **Permanent** (boolean) - Indicates whether the deletion is permanent or not.\n        \n    - **Areas** (array) - Specifies the areas from which the objects will be deleted.\n        \n    - **Context** (string) - Represents the context for the deletion operation.\n        \n    - **classname** (string) - Represents the class name for the deletion request.\n        \n- **jsonrpc** (string) - Specifies the JSON-RPC version as \"2.0\".\n    \n\n### Response\n\nThe response to this request will contain the outcome of the delete operation."
					},
					"response": []
				},
				{
					"name": "GetUsers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"GetUsers\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"Params\": [\t\n\t\t\t\t\t\t{ \"__classname__\": \"QueryParam\", \"Property\": \"UserID\", \"Operation\": \"=\", \"Value\": \"woodwing\" }\n            ]\n\t\t},\n\t\t\t\"__classname__\": \"WflGetUsersRequest\"\n\t\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to retrieve user data by sending a request to the specified URL with the specified payload. The request body is in raw format and contains information about the method, id, parameters, and JSON-RPC version.\n\n### Response\n\nThe response of this request is a JSON schema representing the structure of the response data. It includes the properties and their data types that can be expected in the response when making this request."
					},
					"response": []
				},
				{
					"name": "GetServerInfo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"GetServerInfo\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"__classname__\": \"WflGetServerInfoRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is made in order to retrieve server information. The request payload is in raw JSON format and includes the method, id, params, and jsonrpc fields.\n\n### Request Body\n\n- `method` (string): Specifies the method as \"GetServerInfo\".\n    \n- `id` (string): Represents the identifier as \"1\".\n    \n- `params` (object): Contains the request object with keys like \"req\" and \"**classname**\".\n    \n    - `req` (object): Includes the \"Ticket\" and \"**classname**\" fields for the WflGetServerInfoRequest.\n        \n- `jsonrpc` (string): Indicates the JSON-RPC version as \"2.0\".\n    \n\n### Response\n\nThe response of this request is documented as a JSON schema."
					},
					"response": []
				},
				{
					"name": "GetUserGroups",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"GetUserGroups\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"__classname__\": \"WflGetUserGroupsRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to send a payload to the specified endpoint. The request body is in raw format and contains a JSON object with parameters such as method, id, and params. The method parameter is set to \"GetUserGroups\" and the id parameter is set to \"1\". The params object includes a req property with Ticket and **classname** attributes. The Ticket attribute is set to a value and **classname** is set to \"WflGetUserGroupsRequest\". The jsonrpc property is set to \"2.0\".\n\nThe response to this request will contain the result of the GetUserGroups method call, along with any relevant data or error information."
					},
					"response": []
				},
				{
					"name": "GetUserProfile",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"GetUserProfile\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n            \"RequestInfo\":[\"Memberships\"],\n\t\t\t\"__classname__\": \"WflGetUserProfileRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This endpoint makes an HTTP POST request to the specified URL with the provided payload in the raw request body. The request includes a method \"GetUserProfile\" along with an ID and parameters. The \"Ticket\" and \"RequestInfo\" are part of the parameters. The response of this request will be documented as a JSON schema."
					},
					"response": []
				},
				{
					"name": "GetUserSettings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"GetUserSettings\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n            \"Settings\":[],\n\t\t\t\"__classname__\": \"WflGetUserSettingsRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to retrieve user settings by sending a JSON payload to the specified server directory. The request body includes a method, an ID, and parameters containing a ticket, an array of settings, and a classname. The server expects the payload in JSON format and responds with the relevant user settings."
					},
					"response": []
				},
				{
					"name": "GetNamedQueries",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"GetNamedQueries\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"__classname__\": \"WflGetNamedQueriesRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### POST\n\nThis endpoint is used to make a POST request to retrieve named queries. The request body should be in JSON format.\n\n#### Request Body\n\n- `method` (string): Specifies the method as \"GetNamedQueries\".\n    \n- `id` (string): Specifies the id as \"1\".\n    \n- `params` (object): Contains the parameters for the request.\n    \n    - `req` (object): Contains the request details.\n        \n        - `Ticket` (string): Represents the ticket information.\n            \n        - `__classname__` (string): Specifies the class name as \"WflGetNamedQueriesRequest\".\n            \n- `jsonrpc` (string): Specifies the JSON-RPC version as \"2.0\".\n    \n\n#### Response\n\nThe response will contain the result of the named queries retrieval."
					},
					"response": []
				},
				{
					"name": "CheckTicket",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"CheckTicket\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"__classname__\": \"WflCheckTicketRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to send a payload to the specified endpoint. The request is made to {{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php with the protocol parameter set to JSON.\n\n### Request Body\n\n- **method** (string) - The method being called, in this case, \"CheckTicket\".\n    \n- **id** (string) - The unique identifier for the request, in this case, \"1\".\n    \n- **params** (object) - An object containing the request parameters.\n    \n    - **req** (object) - An object containing the ticket information.\n        \n        - **Ticket** (string) - The ticket value.\n            \n        - **classname** (string) - The class name for the request, in this case, \"WflCheckTicketRequest\".\n            \n- **jsonrpc** (string) - The version of the JSON-RPC protocol being used, in this case, \"2.0\".\n    \n\n### Response\n\nThe response of this request is documented as a JSON schema."
					},
					"response": []
				},
				{
					"name": "UnlockObjects",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"UnlockObjects\",\n    \"id\": \"1\",\n    \"params\": [{                \n                \"Ticket\": \"{{Current_Ticket}}\",\n                \"IDs\": [ \"{{Object_ID}}\" ],\n                \"ReadMessageIDs\": \"\",\n                \"MessageList\": null,\n                \"__classname__\": \"WflUnlockRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "\n### UnlockObjects Request\n\nThis endpoint makes an HTTP POST request to `{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON` to unlock specific objects.\n\n#### Request Body\n- method (string) - The method to be executed, in this case, \"UnlockObjects\".\n- id (string) - The identifier for the request, in this case, \"1\".\n- params (array) - An array containing the parameters for the request.\n  - Ticket (string) - The ticket for authentication.\n  - IDs (array) - An array of object IDs to be unlocked.\n  - ReadMessageIDs (string) - The IDs of read messages.\n  - MessageList (null) - A placeholder for message list.\n  - __classname__ (string) - The class name for the request, in this case, \"WflUnlockRequest\".\n- jsonrpc (string) - The JSON-RPC version, in this case, \"2.0\".\n\n#### Response (JSON Schema)\nThe response of this request follows the JSON schema defined by the API.\n\n"
					},
					"response": []
				},
				{
					"name": "LogOff",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"LogOff\",\n    \"id\": \"1\",\n    \"params\": [{                \n                \"Ticket\": \"{{Current_Ticket}}\",\n                \"__classname__\": \"WflLogOffRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "\n### LogOff Request\n\nThis endpoint makes an HTTP POST request to log off a user from the system. The request body should be sent in raw JSON format and include the method, id, params, and jsonrpc fields.\n\n#### Request Body\n- `method` (string): Specifies the method to be called, in this case, \"LogOff\".\n- `id` (string): Represents the unique identifier for the request, in this case, \"1\".\n- `params` (array): Contains the parameters for the log off request, including the Ticket and __classname__ fields.\n  - `Ticket` (string): Represents the ticket of the current user session.\n  - `__classname__` (string): Indicates the class name for the log off request, in this case, \"WflLogOffRequest\".\n- `jsonrpc` (string): Indicates the version of the JSON-RPC protocol being used, in this case, \"2.0\".\n\n#### Response Body\nThe response to this request will depend on the server's implementation and may include data confirming the successful log off or any error messages.\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Administration",
			"item": [
				{
					"name": "LogOn - Administration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"LogOn\",\n\t\"id\": \"2\",\n\t\"Params\": {\n\t\t\"req\": {\n\t\t\t\"AdminUser\": \"{{Admin_User_Name}}\",\n\t\t\t\"Password\": \"{{Admin_User_Password}}\",\n            \"Ticket\": \"\",\n            \"Server\": \"\",\n\t\t\t\"ClientName\": \"postman\",\n            \"Domain\": \"\",\n\t\t\t\"ClientAppName\": \"postman_sample_admin_request\",\n            \"ClientAppVersion\": \"\",\n            \"ClientAppSerial\": \"\",\n            \"ClientAppCode\": \"\",\n\t\t\t\"__classname__\":\"AdmLogOnRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/adminindex.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"adminindex.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This endpoint makes an HTTP POST request to {{Studio_Server_URL}}/{{Studio_Server_Directory}}/adminindex.php?protocol=JSON to perform a \"LogOn\" method. The request body should include the \"AdminUser\" and \"Password\" parameters for authentication, along with other optional parameters. The response will contain the result of the LogOn method execution."
					},
					"response": []
				},
				{
					"name": "GetIssues",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"GetIssues\",\n    \"id\": \"1\",\n    \"params\": [{\n        \"Ticket\": \"{{Admin_Current_Ticket}}\",\n            \"RequestModes\": [\"GetIssues\"],\n            \"PublicationId\": \"{{Publication_ID}}\",\n            \"PubChannelId\": \"1\",\n            \"__classname__\": \"AdmGetIssuesRequest\"\n        }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/adminindex.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"adminindex.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### POST\n\nThis endpoint is used to retrieve issues using the \"GetIssues\" method.\n\n#### Request Body\n\n- `method` (string) - The method name, set to \"GetIssues\".\n    \n- `id` (string) - The ID of the request, set to \"1\".\n    \n- `params` (array) - An array containing the request parameters:\n    \n    - `Ticket` - The ticket for the admin user.\n        \n    - `RequestModes` (array) - An array containing the request modes, set to \\[\"GetIssues\"\\].\n        \n    - `PublicationId` - The ID of the publication.\n        \n    - `PubChannelId` - The ID of the publication channel.\n        \n    - `__classname__` - The class name for the request, set to \"AdmGetIssuesRequest\".\n        \n- `jsonrpc` (string) - The JSON-RPC version, set to \"2.0\".\n    \n\n#### Response (JSON Schema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"result\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          // Properties of the response object\n        }\n      }\n    },\n    \"error\": {\n      \"type\": \"object\",\n      \"properties\": {\n        // Properties of the error object\n      }\n    },\n    \"id\": { \"type\": \"string\" },\n    \"jsonrpc\": { \"type\": \"string\" }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "CreateIssues",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"CreateIssues\",\n    \"id\": \"1\",\n    \"params\": [{\n        \"Ticket\": \"{{Admin_Current_Ticket}}\",\n        \"RequestModes\": [\"\"],\n        \"PublicationId\": \"{{Publication_ID}}\",\n        \"PubChannelId\": \"1\",\n        \"Issues\":[\n            {\n                \"Name\": \"3rd Issue\",\n                \"Id\": null,\n                \"Description\": \"The Issue Description\",\n                \"SortOrder\": 10,\n                \"EmailNotify\": null,\n                \"ReversedRead\": null,\n                \"OverrulePublication\": null,\n                \"Deadline\": \"\",\n                \"ExpectedPages\": \"16\",\n                \"Subject\": \"The Issue Subject\",\n                \"Activated\": true,\n                \"PublicationDate\": \"\",\n                \"ExtraMetaData\": [],\n                \"CalculateDeadlines\": false,\n                \"__classname__\": \"AdmIssue\"\n            }\n        ],\n        \"__classname__\": \"AdmCreateIssuesRequest\"\n     }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/adminindex.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"adminindex.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "The HTTP POST request to `{{Studio_Server_URL}}/{{Studio_Server_Directory}}/adminindex.php?protocol=JSON` is used to create issues using the \"CreateIssues\" method. The request payload includes the method, id, and parameters containing details about the ticket, request modes, publication ID, pub channel ID, issue name, description, sort order, email notify, reversed read, overrule publication, deadline, expected pages, subject, activation status, publication date, extra metadata, and calculate deadlines.\n\nThe response of this request can be documented as a JSON schema."
					},
					"response": []
				},
				{
					"name": "CopyPublications",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\":\"CopyPublications\",\n    \"id\": \"2\",\n    \"params\": [{\n        \"Ticket\": \"{{Admin_Current_Ticket}}\",\n        \"RequestModes\":[\"GetPublications\"],\n        \"DuplicateIssues\":true,\n        \"SourcePubId\":1,\n        \"TargetPubs\": [{\n                \"Id\":null,\n                \"Name\":\"Copied Publication \",\n                \"Description\":\"Publication Description\",\n                \"SortOrder\":null,\n                \"EmailNotify\":false,\n                \"ReversedRead\":false,\n                \"AutoPurge\":null,\n                \"DefaultChannelId\":null,\n                \"ExtraMetaData\":[null],\n                \"PubChannels\":[null],\n                \"Issues\":[null],\n                \"Editions\":[null],\n                \"Sections\":[null],\n                \"UserGroups\":[null],\n                \"AdminGroups\":[null],\n                \"Workflows\":[null],\n                \"Routings\":[null],\n                \"CalculateDeadlines\":[null],\n                \"__classname__\": \"AdmPublication\"\n        }],\n        \"__classname__\": \"AdmCopyPublicationsRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/StudioServer/adminindex.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"StudioServer",
								"adminindex.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "The HTTP POST request to `{{Studio_Server_URL}}/{{Studio_Server_Directory}}/StudioServer/adminindex.php?protocol=JSON` is used to copy publications. The request body should be in JSON format and include the method, id, and params fields. The method field should be set to \"CopyPublications\" and the params field should contain the necessary details for copying publications, such as the Ticket, RequestModes, DuplicateIssues, SourcePubId, and TargetPubs. The response of this request should be documented as a JSON schema and a description for the request and response body should be added to the documentation."
					},
					"response": []
				},
				{
					"name": "GetUsers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"GetUsers\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Admin_Current_Ticket}}\",\n\t\t\t\"RequestModes\": [],\n            \"GroupId\": null,\n            \"UserIds\":null,\n\t\t\t\"__classname__\": \"AdmGetUsersRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/adminindex.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"adminindex.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to retrieve user information by sending a request to the specified adminindex.php endpoint with the protocol set to JSON. The request body is in raw format and includes the method \"GetUsers\" along with an ID and parameters such as Ticket, RequestModes, GroupId, UserIds, and **classname**. The server responds with the relevant user information in JSON format."
					},
					"response": []
				},
				{
					"name": "ModifyUsers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"ModifyUsers\",\n    \"id\": \"1\",\n    \"params\": {\n        \"req\": {\n            \"Ticket\": \"{{Admin_Current_Ticket}}\",\n            \"RequestModes\": [],\n            \"Users\": [\n                {\n                \"Id\": \"1\",\n                \"Name\": \"WoodWing\",\n                \"FullName\": \"<UserFullName>\",\n                \"EmailAddress\": \"jga@woodwing.com\",\n                \"Language\": \"enUS\", //<UserLanguage> or this line can be removed if the default should be used>\n                \"__classname__\": \"AdmUser\"\n            }\n            ],\n            \"__classname__\": \"AdmModifyUsersRequest\"\n        }\n    },\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/adminindex.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"adminindex.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to modify users via the adminindex.php endpoint on the Studio server. The request payload is sent in JSON format and includes the method, id, and params fields. The method field specifies \"ModifyUsers\" as the action to be performed. The params field contains the request object with the Ticket, RequestModes, and Users array, where each user object includes Id, Name, FullName, EmailAddress, Language, and **classname** properties. The response to this request will contain the outcome of the user modification operation."
					},
					"response": []
				},
				{
					"name": "GetUserGroups",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"GetUserGroups\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Admin_Current_Ticket}}\",\n\t\t\t\"RequestModes\": [],\n            \"UserId\":1,\n            \"GroupIds\":[\"2\"],\n\t\t\t\"__classname__\": \"AdmGetUserGroupsRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/adminindex.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"adminindex.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### Request Description\n\nThis endpoint makes an HTTP POST request to `{{Studio_Server_URL}}/{{Studio_Server_Directory}}/adminindex.php?protocol=JSON` to retrieve user groups. The request body should be in JSON format and includes the method, id, and params fields.\n\n| Key | Type | Description |\n| --- | --- | --- |\n| method | String | Specifies the method to be executed, in this case, \"GetUserGroups\" |\n| id | String | Identifier for the request, in this case, \"1\" |\n| params | Object | Contains the request parameters including Ticket, RequestModes, UserId, GroupIds, and **classname** |\n\n#### Request Body\n\n- method (String): Specifies the method to be executed, in this case, \"GetUserGroups\"\n    \n- id (String): Identifier for the request, in this case, \"1\"\n    \n- params (Object): Contains the request parameters including Ticket, RequestModes, UserId, GroupIds, and **classname**\n    \n\n### Response\n\nThe response for this request should be documented as a JSON schema."
					},
					"response": []
				},
				{
					"name": "Admin LogOff",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"LogOff\",\n    \"id\": \"1\",\n    \"params\": [{                \n                \"Ticket\": \"{{Admin_Current_Ticket}}\",\n                \"__classname__\": \"WflLogOffRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This endpoint makes an HTTP POST request to {{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php with the protocol parameter set to JSON. The request body is a JSON object with the method set to \"LogOff\", id set to \"1\", and params containing a Ticket and **classname** property. Upon successful execution, the response will be documented as a JSON schema."
					},
					"response": []
				}
			]
		},
		{
			"name": "System Administration",
			"item": []
		},
		{
			"name": "Planning",
			"item": [
				{
					"name": "LogOn - Planning",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"LogOn\",\n\t\"id\": \"1\",\n\t\"Params\": {\n\t\t\"req\": {\n\t\t\t\"User\":\"{{User_Name}}\",\n\t\t\t\"Password\":\"{{Password}}\",\n            \"Ticket\":\"\",\n            \"Server\":\"\",\n\t\t\t\"ClientName\":\"postman\",\n            \"Domain\":\"\",\n\t\t\t\"ClientAppName\":\"postman_sample_requests\",\n            \"ClientAppVersion\":\"\",\n            \"ClientAppSerial\":\"\",\n\t\t\t\"__classname__\":\"PlnLogOnRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/editorialplan.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"editorialplan.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This endpoint allows you to send an HTTP POST request to the specified URL and directory with the purpose of logging on. The request payload should be in JSON format and include the method, id, and Params with specific user information. Upon successful execution, the response will be documented as a JSON schema."
					},
					"response": []
				},
				{
					"name": "CreateLayouts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"CreateLayouts\",\n\t\"id\": \"1\",\n\t\"params\": [{\n\t\t\"req\":{\n                \"Ticket\": \"{{Current_Ticket}}\",\n\t\t        \"Layouts\": [{\n\t\t\t        \"LayoutFromTemplate\": [{\n\t\t\t\t        \"NewLayout\": [{\n\t\t\t\t\t        \"Layout\": [{\n\t\t\t\t\t\t        \"Id\": \"\",\n\t\t\t\t\t\t        \"Name\": \"Planned Layout\",\n\t\t\t\t\t\t        \"Publication\": \"25\",\n\t\t\t\t\t\t        \"Issue\": \"41\",\n\t\t\t\t\t\t        \"PubChannel\": \"17\",\n\t\t\t\t\t\t        \"Section\": \"40\",\n\t\t\t\t\t\t        \"Status\": \"341\",\n\t\t\t\t\t\t        \"Pages\": [],\n\t\t\t\t\t\t        \"Editions\": [],\n\t\t\t\t\t\t        \"Deadline\": \"\",\n\t\t\t\t\t\t        \"Version\": \"\",\n\t\t\t\t\t\t        \"__classname__\": \"PlnLayout\"\n\t\t\t\t\t        }],\n\t\t\t\t        \"Template\": \"JG - Template\"    \n\t\t\t\t        }],\n                        \"__classname__\": \"PlnLayoutFromTemplate\"\n\t\t\t        }]\n\t\t        }],\n\t\t        \"__classname__\": \"PlnCreateLayoutsRequest\"\n\t        }\n    }],\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/editorialplan.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"editorialplan.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to create layouts in the editorial plan. The request is sent to {{Studio_Server_URL}}/{{Studio_Server_Directory}}/editorialplan.php with the protocol parameter set to JSON. The request body is in raw format and contains a method \"CreateLayouts\" along with an id and params. The params include a Ticket, Layouts, and classname. The Ticket is a placeholder for the current ticket, and Layouts contains information about the planned layout, such as Name, Publication, Issue, PubChannel, Section, Status, Pages, Editions, Deadline, Version, and Template.\n\nThe response to this request will contain the result of the CreateLayouts method, providing information about the success or failure of the layout creation operation."
					},
					"response": []
				}
			]
		},
		{
			"name": "Connect Webhooks",
			"item": [
				{
					"name": "LogOn",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"LogOn\",\n\t\"id\": \"1\",\n\t\"Params\": {\n\t\t\"req\": {\n\t\t\t\"User\":\"{{User_Name}}\",\n\t\t\t\"Password\":\"{{Password}}\",\n\t\t\t\"ClientName\":\"postman\",\n\t\t\t\"ClientAppName\":\"postman_sample_requests\",\n            \"ClientAppVersion\":\"\",\n            \"ClientAppSerial\":\"\",\n            \"RequestInfo\":[\"\"],\n\t\t\t\"__classname__\":\"WflLogOnRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								},
								{
									"key": "user",
									"value": "{{User_Name}}",
									"disabled": true
								},
								{
									"key": "password",
									"value": "{{Password}}",
									"disabled": true
								},
								{
									"key": "ClientName",
									"value": "Postman",
									"disabled": true
								},
								{
									"key": "ClientAppName",
									"value": "Postman",
									"disabled": true
								}
							]
						},
						"description": "The HTTP POST request to the specified URL and directory is used to perform a \"LogOn\" method with the provided payload in JSON format. The request body includes the user's credentials, client information, and request details.\n\n### Request Body\n\n- method (string): \"LogOn\"\n    \n- id (string): \"1\"\n    \n- Params (object):\n    \n    - req (object):\n        \n        - User (string): The user's username\n            \n        - Password (string): The user's password\n            \n        - ClientName (string): \"postman\"\n            \n        - ClientAppName (string): \"postman_sample_requests\"\n            \n        - ClientAppVersion (string): \"\"\n            \n        - ClientAppSerial (string): \"\"\n            \n        - RequestInfo (array): Contains additional request information\n            \n        - **classname** (string): \"WflLogOnRequest\"\n            \n- jsonrpc (string): \"2.0\"\n    \n\n### Response\n\nThe response to the request includes a status code of 200 and the content type is \"application/json\". The response body contains the result object with various properties such as Ticket, Publications, NamedQueries, FeatureSet, LimitationSet, ServerInfo, Settings, Users, UserGroups, Membership, ObjectTypeProperties, ActionProperties, Terms, FeatureProfiles, Messages, TrackChangesColor, Dictionaries, MessageList, CurrentUser, MessageQueueConnections, MessageQueue, and **classname**. Each property holds specific data related to the logon process."
					},
					"response": []
				},
				{
					"name": "GetTriggerOptions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"GetTriggerOptions\",\n    \"id\": \"1\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"__classname__\": \"CwhRegGetTriggerOptionsRequest\"\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=ConnectWebhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "ConnectWebhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### ConnectWebhooks Registration - GetTriggerOptions\n\nThis endpoint allows you to retrieve trigger options for ConnectWebhooks registration.\n\n#### Request Body\n\n- Method: JSON\n    \n    - `method`: The method to be executed, set to \"GetTriggerOptions\".\n        \n    - `id`: The ID of the request, set to \"1\".\n        \n    - `params`: An array containing the request parameters, including the \"Ticket\" and \"**classname**\".\n        \n\n#### Response\n\nThe response will be in JSON format and follows the schema:\n\n``` json\n{\n  \"id\": \"\",\n  \"result\": {\n    \"Options\": [\n      {\n        \"Entity\": {\n          \"Name\": \"\",\n          \"DisplayName\": \"\",\n          \"__classname__\": \"\"\n        },\n        \"EventTypes\": [\n          {\n            \"Name\": \"\",\n            \"DisplayName\": \"\",\n            \"__classname__\": \"\"\n          }\n        ],\n        \"__classname__\": \"\"\n      }\n    ],\n    \"__classname__\": \"\"\n  },\n  \"jsonrpc\": \"\"\n}\n\n ```\n\nThis JSON schema represents the structure of the response returned by the API endpoint."
					},
					"response": []
				},
				{
					"name": "ListWebhookRegistrations",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\":\"ListWebhookRegistrations\",\n    \"id\": \"\",\n    \"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"__classname__\": \"CwhRegListWebhookRegistrationsRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\":\"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=ConnectWebhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "ConnectWebhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This endpoint allows you to make an HTTP POST request to retrieve a list of webhook registrations. The request should be sent to {{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=ConnectWebhooks&interface=reg&protocol=JSON. The request body should be in raw JSON format and include the \"method\" key set to \"ListWebhookRegistrations\", an empty \"id\", and \"params\" containing \"req\" with \"Ticket\" and \"**classname**\" fields.\n\n### Request Body\n\n- Method: text\n    \n    - Description: The method to be executed, set to \"ListWebhookRegistrations\".\n        \n- id: text\n    \n    - Description: The ID, set to an empty string.\n        \n- params: text\n    \n    - Description: Additional parameters including \"req\" with \"Ticket\" and \"**classname**\" fields.\n        \n\nUpon successful execution, the response will have a status code of 200 and a content type of application/json. The response body will contain an \"id\" field set to an empty string, and a \"result\" field containing an array of \"Registrations\" with details including \"Id\", \"Name\", \"Url\", \"Triggers\", \"SystemId\", and \"Enabled\".\n\n### Response Body\n\n- id: text\n    \n    - Description: The ID, set to an empty string.\n        \n- result: text\n    \n    - Description: Contains an array of \"Registrations\" with details of each registration.\n        \n    - Registrations: array\n        \n        - Id: text\n            \n            - Description: The ID of the registration.\n                \n        - Name: text\n            \n            - Description: The name of the registration.\n                \n        - Url: text\n            \n            - Description: The URL associated with the registration.\n                \n        - Triggers: array\n            \n            - Description: Contains details of triggers including \"EntityName\", \"EventTypes\", and \"**classname**\".\n                \n        - SystemId: text\n            \n            - Description: The system ID associated with the registration.\n                \n        - Enabled: boolean\n            \n            - Description: Indicates if the registration is enabled."
					},
					"response": []
				},
				{
					"name": "GetWebhookRegistration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\":\"GetWebhookRegistration\",\n    \"id\":1,\n    \"params\": [\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n            \"Id\": \"372c646c-941b-4b04-abc9-34a9dbbc9f71\",\n\t\t\t\"__classname__\": \"CwhRegGetWebhookRegistrationRequest\"\n\t\t}\n    ],\n\t\"jsonrpc\":\"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=ConnectWebhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "ConnectWebhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### Connect Webhooks Registration\n\nThis endpoint allows you to register a webhook for ConnectWebhooks plugin in JSON format.\n\n#### Request Body\n\n- **jsonrpc** (string) - The JSON-RPC version.\n    \n- **method** (string) - The method to be executed, in this case, \"GetWebhookRegistration\".\n    \n- **params** (object) - The parameters for the request.\n    \n    - **req** (object) - The request object containing:\n        \n        - **Ticket** (string) - The ticket information.\n            \n        - **Id** (string) - The ID for the registration.\n            \n        - **classname** (string) - The class name for the request.\n            \n\n#### Response\n\nUpon successful execution, the response will include:\n\n- **id** (string) - The ID of the response.\n    \n- **result** (object) - The result object containing:\n    \n    - **Registration** (object) - The registration details including:\n        \n        - **Id** (string) - The ID of the registration.\n            \n        - **Name** (string) - The name of the registration.\n            \n        - **Url** (string) - The URL for the registration.\n            \n        - **SecretToken** (string) - The secret token for the registration.\n            \n        - **Triggers** (array) - An array of triggers containing:\n            \n            - **EntityName** (string) - The entity name for the trigger.\n                \n            - **EventTypes** (array) - An array of event types for the trigger.\n                \n            - **classname** (string) - The class name for the trigger.\n                \n        - **SystemId** (string) - The ID of the system.\n            \n        - **Enabled** (boolean) - Indicates if the registration is enabled.\n            \n        - **classname** (string) - The class name for the registration.\n            \n- **jsonrpc** (string) - The JSON-RPC version."
					},
					"response": []
				},
				{
					"name": "CreateWebhookRegistration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"CreateWebhookRegistration\",\n    \"id\": \"\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Registration\": {\n                \"Name\": \"studio.object.properties-update-Hook0\",\n                \"Url\": \"https://webhook.site/4eae43eb-fc51-4075-ae77-58d1d8332ec1\",\n                \"SecretToken\": null,\n                \"Triggers\": [\n                    {\n                        \"EntityName\": \"object\",\n                        \"EventTypes\": [\n                            \"studio.object.properties-updated\"\n                        ],\n                        \"__classname__\": \"CwhRegTrigger\"\n                    }\n                ],\n                \"__classname__\": \"CwhRegWebhookRegistrationInfo\"\n            },\n            \"__classname__\": \"CwhRegCreateWebhookRegistrationRequest\"\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=ConnectWebhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "ConnectWebhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to create a webhook registration for ConnectWebhooks plugin using JSON protocol. The request body includes the method \"CreateWebhookRegistration\" along with parameters such as Ticket, Registration details including Name, Url, and Triggers. The response will have a status code of 200 and a JSON content type. The response body will contain the result with the created Registration details including Id, Name, Url, SecretToken, Triggers, SystemId, and Enabled status.\n\n### Request Body\n\n- method (string): The method to create webhook registration.\n    \n- id (string): Identifier for the request.\n    \n- params (object): Parameters including Ticket and Registration details.\n    \n    - Ticket (string): The ticket information.\n        \n    - Registration (object): Details of the webhook registration.\n        \n        - Name (string): Name of the webhook registration.\n            \n        - Url (string): URL for the webhook.\n            \n        - SecretToken (string): Secret token for the webhook.\n            \n        - Triggers (array): Array of triggers for the webhook.\n            \n            - EntityName (string): Name of the entity triggering the webhook.\n                \n            - EventTypes (array): Array of event types triggering the webhook.\n                \n        - **classname** (string): Classname for the webhook registration.\n            \n\n### Response Body\n\n- id (string): Identifier for the response.\n    \n- result (object): Result object containing the created Registration details.\n    \n    - Registration (object): Details of the created webhook registration.\n        \n        - Id (string): Identifier of the created registration.\n            \n        - Name (string): Name of the created registration.\n            \n        - Url (string): URL of the created registration.\n            \n        - SecretToken (string): Secret token of the created registration.\n            \n        - Triggers (array): Array of triggers for the created registration.\n            \n            - EntityName (string): Name of the entity triggering the webhook.\n                \n            - EventTypes (array): Array of event types triggering the webhook.\n                \n        - SystemId (string): System identifier of the created registration.\n            \n        - Enabled (boolean): Status of the created registration.\n            \n        - **classname** (string): Classname for the created registration.\n            \n- jsonrpc (string): JSON-RPC version."
					},
					"response": []
				},
				{
					"name": "UpdateWebhookRegistration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"UpdateWebhookRegistration\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Registration\": {\n                \"Id\": \"439b54fb-912a-4b2b-8fa2-f8a475090dc7\",\n                \"Name\": \"SendWhenObjectCreated4\",\n                \"Url\": \"https://webhook.site/2d085bd2-8bcd-410b-85c8-b5658b5bbac1\",\n                \"SecretToken\": null,\n                \"Triggers\": [\n                    {\n                        \"EntityName\": \"object\",\n                        \"EventTypes\": [\n                            \"studio.object.deleted-permanently\"\n                        ],\n                        \"__classname__\":  \"CwhRegTrigger\"\n                    }\n                ],\n                \"SystemId\": \"dcf8cd99-5774-fd66-bc84-24dd0cc3d9c1\",\n                \"Enabled\": false,\n                \"__classname__\": \"CwhRegWebhookRegistrationInfo\"\n            },\n            \"__classname__\": \"CwhRegCreateWebhookRegistrationRequest\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=ConnectWebhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "ConnectWebhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This endpoint allows you to make an HTTP POST request to register or update webhooks using JSON format. The request should be sent to {{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php with the plugin parameter set to ConnectWebhooks and the interface parameter set to reg, and the protocol parameter set to JSON.\n\n### Request Body\n\nThe request should include a JSON object with the following structure:\n\n``` json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"UpdateWebhookRegistration\",\n  \"params\": [\n    {\n      \"Ticket\": \"{{Current_Ticket}}\",\n      \"Registration\": {\n        \"Id\": \"439b54fb-912a-4b2b-8fa2-f8a475...\",\n        \"Name\": \"SendWhenObjectCreated4\",\n        \"Url\": \"https://webhook.site/2d085bd2-...\",\n        \"SecretToken\": null,\n        \"Triggers\": [\n          {\n            \"EntityName\": \"object\",\n            \"EventTypes\": [\n              \"studio.object.deleted-permanen...\"\n            ],\n            \"__classname__\": \"CwhRegTrigger\"\n          }\n        ],\n        \"SystemId\": \"dcf8cd99-5774-fd66-bc84-24dd0c...\",\n        \"Enabled\": false,\n        \"__classname__\": \"CwhRegWebhookRegistrationInfo\"\n      },\n      \"__classname__\": \"CwhRegCreateWebhookRegistratio...\"\n    }\n  ]\n}\n### Response\nThe response to the request will have a status code of 204 and a Content-Type of text/xml. The response body will be null.\n\n ```"
					},
					"response": []
				},
				{
					"name": "DeleteWebhookRegistration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"DeleteWebhookRegistration\",\n    \"id\": \"\",\n     \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Id\": \"9b2b384f-c519-4caf-ba36-66715ef92f92\",\n            \"__classname__\": \"CwhRegDeleteWebhookRegistrationRequest\"\n        }\n     ],\n     \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=ConnectWebhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "ConnectWebhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### POST\n\nThis endpoint is used to delete a webhook registration by sending an HTTP POST request to the specified URL.\n\n#### Request Body\n\n- method (string): Specifies the method as \"DeleteWebhookRegistration\".\n    \n- id (string): Represents the unique identifier.\n    \n- params (array): Contains the parameters for the deletion, including \"Ticket\" and \"Id\".\n    \n- jsonrpc (string): Indicates the JSON-RPC version.\n    \n\n#### Response\n\nThe response will be in JSON format with the following schema:\n\n``` json\n{\n  \"id\": \"\",\n  \"result\": {\n    \"__classname__\": \"\"\n  },\n  \"jsonrpc\": \"\"\n}\n\n ```\n\n- id (string): Represents the unique identifier.\n    \n- result (object): Contains the result of the deletion, with \"**classname**\" indicating the class name.\n    \n- jsonrpc (string): Indicates the JSON-RPC version."
					},
					"response": []
				}
			]
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "LogOn",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"LogOn\",\n\t\"id\": \"1\",\n\t\"Params\": {\n\t\t\"req\": {\n\t\t\t\"User\":\"{{User_Name}}\",\n\t\t\t\"Password\":\"{{Password}}\",\n\t\t\t\"ClientName\":\"postman\",\n\t\t\t\"ClientAppName\":\"postman_sample_requests\",\n            \"ClientAppVersion\":\"\",\n            \"ClientAppSerial\":\"\",\n            \"RequestInfo\":[\"\"],\n\t\t\t\"__classname__\":\"WflLogOnRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								},
								{
									"key": "user",
									"value": "{{User_Name}}",
									"disabled": true
								},
								{
									"key": "password",
									"value": "{{Password}}",
									"disabled": true
								},
								{
									"key": "ClientName",
									"value": "Postman",
									"disabled": true
								},
								{
									"key": "ClientAppName",
									"value": "Postman",
									"disabled": true
								}
							]
						},
						"description": "The endpoint makes an HTTP POST request to {{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php with the protocol parameter set to JSON. The request payload includes a method, id, and Params object containing User, Password, ClientName, ClientAppName, ClientAppVersion, ClientAppSerial, RequestInfo, and **classname** properties.\n\n### Response\n\nThe response of this request can be documented as a JSON schema."
					},
					"response": []
				},
				{
					"name": "GetTriggerOptions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"jsonrpc\":\"2.0\",\n\t\"method\":\"GetTriggerOptions\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"__classname__\": \"WhRegGetTriggerOptionsRequest\"\n\t\t}\n\t},\n\t\"id\":1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=Webhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "Webhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### POST\n\nThis endpoint is used to retrieve trigger options using the Webhooks plugin with the JSON protocol.\n\n#### Request Body\n\n- { \"jsonrpc\": \"2.0\", \"method\": \"GetTriggerOptions\", \"params\": { \"req\": { \"Ticket\": \"{{Current_Ticket}}\", \"__classname__\": \"WhRegGetTriggerOptionsRequest\" } }, \"id\": 1}\n    \n\n#### Response\n\nThe response of this request can be documented as a JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"string\" },\n    \"result\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Options\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"Entity\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"Name\": { \"type\": \"string\" },\n                  \"DisplayName\": { \"type\": \"string\" },\n                  \"__classname__\": { \"type\": \"string\" }\n                }\n              },\n              \"EventTypes\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"Name\": { \"type\": \"string\" },\n                    \"DisplayName\": { \"type\": \"string\" },\n                    \"__classname__\": { \"type\": \"string\" }\n                  }\n                }\n              },\n              \"__classname__\": { \"type\": \"string\" }\n            }\n          }\n        },\n        \"__classname__\": { \"type\": \"string\" }\n      }\n    },\n    \"jsonrpc\": { \"type\": \"string\" }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "ListWebhookRegistrations",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"ListWebhookRegistrations\",\n    \"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"__classname__\": \"WhRegListWebhookRegistrationsRequest\"\n\t\t}\n\t},\n\t\"id\":1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=Webhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "Webhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### POST\n\nThis endpoint is used to retrieve a list of webhook registrations. The request should be made with a JSON payload containing the necessary parameters.\n\n#### Request Body\n\n- `jsonrpc` (string): The JSON-RPC version.\n    \n- `method` (string): The method to be called, in this case, \"ListWebhookRegistrations\".\n    \n- `params` (object): An object containing the request parameters, such as \"Ticket\" and \"**classname**\".\n    \n- `id` (number): The request identifier.\n    \n\n#### Response\n\nThe response will be in JSON format and should adhere to the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"result\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    // Properties of the result items\n                }\n            }\n        },\n        \"id\": {\n            \"type\": \"number\"\n        },\n        \"jsonrpc\": {\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\"result\", \"id\", \"jsonrpc\"]\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "GetWebhookRegistration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"GetWebhookRegistration\",\n    \"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n            \"Id\": 241,\n\t\t\t\"__classname__\": \"WhRegGetWebhookRegistrationRequest\"\n\t\t}\n\t},\n\t\"id\":1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=Webhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "Webhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### POST\n\nThis endpoint is used to retrieve webhook registration details using the JSON protocol.\n\n#### Request Body\n\n- { \"jsonrpc\": \"2.0\", \"method\": \"GetWebhookRegistration\", \"params\": { \"req\": { \"Ticket\": \"{{Current_Ticket}}\", \"Id\": 190, \"__classname__\": \"WhRegGetWebhookRegistrationReq ...\" } }, \"id\": 1}\n    \n\n#### Response (JSON Schema)\n\nThe response of this request can be documented as a JSON schema.\n\n- The JSON schema for the response will define the structure of the data returned by the API endpoint.\n    \n- It will include the properties, data types, and any validation rules for the response data."
					},
					"response": []
				},
				{
					"name": "UpdateWebhookRegistration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"UpdateWebhookRegistration\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Registration\": {\n                \"Id\": 47,\n                \"Name\": \"SendWhenObjectCreated\",\n                \"Url\": \"https://www.jeffgapp.com\",\n                \"SecretToken\": null,\n                \"Triggers\": [\n                    {\n                        \"EntityName\": \"object\",\n                        \"EventTypes\": [\n                            \"com.woodwing.studio\\/object\\/created\"\n                        ],\n                        \"__classname__\": \"WhRegTrigger\"\n                    }\n                ],\n                \"__classname__\": \"WhRegWebhookRegistrationInfo\"\n            },\n            \"__classname__\": \"WhRegCreateWebhookRegistrationRequest\"\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=Webhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "Webhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to update a webhook registration for the Webhooks plugin in the Studio Server. The request is sent to the specified directory with the plugin, interface, and protocol parameters. The request body is in raw JSON format and includes the necessary parameters for updating the webhook registration, such as the Ticket, Registration Id, Name, URL, SecretToken, and Triggers.\n\nThe response body will contain the result of the update operation, indicating whether the webhook registration was successfully updated or if there was an error. The response will provide relevant information about the updated webhook registration or any error messages encountered during the update process."
					},
					"response": []
				},
				{
					"name": "CreateWebhookRegistration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"CreateWebhookRegistration\",\n    \"id\": \"\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Registration\": {\n                \"Name\": \"Test-sending-webhook\",\n                \"Url\": \"https://webhook.site/ccd03a3a-7f7f-42c6-8b45-8d57386a4953\",\n                \"SecretToken\": null,\n                \"Triggers\": [\n                    {\n                        \"EntityName\": \"object\",\n                        \"EventTypes\": [\n                            \"com.woodwing.studio/object/properties-updated\"\n                        ],\n                        \"__classname__\": \"WhRegTrigger\"\n                    }\n                ],\n                \"__classname__\": \"WhRegWebhookRegistrationInfo\"\n            },\n            \"__classname__\": \"WhRegCreateWebhookRegistrationRequest\"\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=Webhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "Webhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "### Create Webhook Registration\n\nThis endpoint is used to create a webhook registration for the Webhooks plugin, with the interface set to 'reg' and the protocol set to JSON.\n\n#### Request Body\n\n- method (string): The method for creating the webhook registration.\n    \n- id (string): The unique identifier for the request.\n    \n- params (array): An array containing the details of the webhook registration.\n    \n    - Ticket (string): The ticket associated with the registration.\n        \n    - Registration (object): The details of the webhook registration.\n        \n        - Name (string): The name of the webhook registration.\n            \n        - Url (string): The URL where the webhook events will be sent.\n            \n        - SecretToken (string): The secret token for secure communication (if applicable).\n            \n        - Triggers (array): An array containing the triggers for the webhook registration.\n            \n            - EntityName (string): The entity name for the trigger.\n                \n            - EventTypes (array): An array of event types associated with the trigger.\n                \n        - **classname** (string): The class name for the webhook registration.\n            \n    - jsonrpc (string): The JSON-RPC version.\n        \n\n#### Response\n\nThe response for this request will be a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"result\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"WebhookID\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"jsonrpc\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "DeleteWebhookRegistration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"DeleteWebhookRegistration\",\n    \"id\": \"\",\n     \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Id\": 94,\n            \"__classname__\": \"WhRegDeleteWebhookRegistrationRequest\"\n        }\n     ],\n     \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/pluginindex.php?plugin=Webhooks&interface=reg&protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"pluginindex.php"
							],
							"query": [
								{
									"key": "plugin",
									"value": "Webhooks"
								},
								{
									"key": "interface",
									"value": "reg"
								},
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to interact with the Webhooks plugin on the server to manage webhook registrations. The request is sent to the specified directory and includes parameters for the plugin, interface, and protocol in the URL. The request body is in raw format and includes the method \"DeleteWebhookRegistration\" along with other parameters such as \"Ticket\", \"Id\", and \"**classname**\" within the \"params\" array. The \"jsonrpc\" version is specified as \"2.0\".\n\nThe response to this request will include the outcome of the \"DeleteWebhookRegistration\" method, providing details about the success or failure of the operation."
					},
					"response": []
				},
				{
					"name": "LogOff",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"LogOff\",\n    \"id\": \"1\",\n    \"params\": [{                \n                \"Ticket\": \"{{Current_Ticket}}\",\n                \"__classname__\": \"WflLogOffRequest\"\n    }],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						},
						"description": "This HTTP POST request is used to log off from the server. The request is sent to {{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php with the protocol parameter set to JSON. The request body is in raw format and includes the method, id, params, and jsonrpc fields. The method field is set to \"LogOff\" to indicate the action, and the params field includes the Ticket and **classname** properties for the log off request.\n\nThe response to this request will contain the result of the log off action, along with any relevant data or error messages."
					},
					"response": []
				}
			],
			"description": "List of available webhooks:  \n  \nObject event\n\nCreated\n\nCreates a new object in the workflow.\n\nMoved to Trash Can\n\nMoves an object from the workflow to the Trash Can.\n\nDeleted\n\nDeletes an object permanently (from the workflow or Trash Can).\n\nRestored\n\nRestores a deleted object from the Trash Can (back into the workflow).\n\nCopied\n\nCreates a new object by copying an existing object.\n\nSaved\n\nSaves a new file version for an object.\n\nModified\n\nChanges the properties of an object using the Properties dialog."
		},
		{
			"name": "Digital Articles",
			"item": [
				{
					"name": "Supporting Requests",
					"item": [
						{
							"name": "Upload Transfer Server Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Generate a random UUID",
											"const random_uuid = uuidv4();",
											"  ",
											"function uuidv4() {",
											"    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'",
											"    .replace(/[xy]/g, function (c) {",
											"        const r = Math.random() * 16 | 0, ",
											"            v = c == 'x' ? r : (r & 0x3 | 0x8);",
											"        return v.toString(16);",
											"    });",
											"}",
											"pm.environment.set(\"Uuid_For_PUT\", random_uuid);",
											"",
											"// Print the UUID",
											"console.log(random_uuid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "testfile.json"
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/{{FileUploadUrl}}?ticket={{Current_Ticket}}&fileguid={{Uuid_For_PUT}}",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"{{FileUploadUrl}}"
									],
									"query": [
										{
											"key": "ticket",
											"value": "{{Current_Ticket}}"
										},
										{
											"key": "fileguid",
											"value": "{{Uuid_For_PUT}}"
										}
									]
								},
								"description": "\nThis endpoint allows you to upload a file to the specified directory on the Studio Server. The HTTP PUT request should be made to the provided URL with the ticket and fileguid as query parameters.\n\nThe response of this request is documented as a JSON schema.\n"
							},
							"response": []
						},
						{
							"name": "Delete Transfer Server Request",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/{{FileUploadUrl}}?ticket={{Current_Ticket}}&fileguid={{Uuid_For_PUT}}&httpmethod=DELETE",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"{{FileUploadUrl}}"
									],
									"query": [
										{
											"key": "ticket",
											"value": "{{Current_Ticket}}"
										},
										{
											"key": "fileguid",
											"value": "{{Uuid_For_PUT}}"
										},
										{
											"key": "httpmethod",
											"value": "DELETE"
										}
									]
								},
								"description": "This endpoint is used to delete a specific file from the server directory. The request should include the file upload URL, current ticket, and the UUID for the PUT method in the query parameters. The response will indicate the success or failure of the deletion operation.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response Body\n\n- success (boolean): Indicates whether the deletion operation was successful.\n    \n- message (string): Provides a message regarding the deletion operation."
							},
							"response": []
						},
						{
							"name": "Download Transfer Server Request",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/{{FileUploadUrl}}?ticket={{Current_Ticket}}&fileguid={{Uuid_For_PUT}}&format=application/ww-digital+json&httpmethod=GET",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"{{FileUploadUrl}}"
									],
									"query": [
										{
											"key": "ticket",
											"value": "{{Current_Ticket}}"
										},
										{
											"key": "fileguid",
											"value": "{{Uuid_For_PUT}}"
										},
										{
											"key": "format",
											"value": "application/ww-digital+json"
										},
										{
											"key": "httpmethod",
											"value": "GET"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "QueryObjects Digital Article Templates",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"QueryObjects\",\n\t\"id\": \"1\",\n\t\"params\": {\n\t\t\"req\": {\n\t\t\t\"Ticket\": \"{{Current_Ticket}}\",\n\t\t\t\"Params\": [\t\n\t\t\t\t\t\t{ \"__classname__\": \"QueryParam\", \"Property\": \"Type\", \"Operation\": \"=\", \"Value\": \"ArticleTemplate\" }\n\t\t\t\t\t],\n\t\t\t\t\t\"FirstEntry\": null,\n\t\t\t\t\t\"MaxEntries\": null,\n\t\t\t\t\t\"Hierarchical\": false,\n\t\t\t\t\t\"MinimalProps\": [   \"ID\", \n\t\t\t\t\t\t\t\t\t    \"Type\",\n\t\t\t\t\t\t\t\t\t\t\"Name\"\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\"RequestProps\": [   \"ID\", \n\t\t\t\t\t\t\t\t\t    \"Type\",\n\t\t\t\t\t\t\t\t\t\t\"Name\"\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\"Areas\": null,\n\t\t\t\t\t\"GetObjectMode\": false,\n                    \"__classname__\": \"WflQueryObjectsRequest\"\n\t\t}\n\t},\n\t\"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateObjects Digital Article",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"CreateObjects\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Lock\": false,\n            \"Objects\": [\n                {    \n                    \"MetaData\": {  \n                        \"BasicMetaData\": {\n                            \"Name\": \"test digital article file\",\n                            \"Category\": {\n                                \"Name\": \"News\",\n                                \"Id\": \"40\",\n                                \"__classname__\": \"Category\"\n                            },\n                            \"Type\": \"Article\",\n                            \"Publication\": {\n                                \"Id\": \"25\",\n                                \"Name\": \"WoodWing\",\n                                \"__classname__\": \"Publication\"\n                            },\n                            \"__classname__\": \"BasicMetaData\"\n                        },\n                        \"WorkflowMetaData\": {\n                            \"__classname__\": \"WorkflowMetaData\",\n                            \"Comment\": \"Gapp\",\n                            \"State\": {\n                                \"Id\": \"328\",\n                                \"Name\": \"Draft\",\n                                \"Type\": \"Article\",\n                                \"__classname__\": \"State\"\n                            }\n                        },\n                        \"RightsMetaData\": {\n                            \"__classname__\": \"RightsMetaData\"\n                        },\n                        \"SourceMetaData\": {\n                            \"__classname__\": \"SourceMetaData\"\n                        },\n                        \"ContentMetaData\": {\n                            \"__classname__\": \"ContentMetaData\",\n                            \"Format\": \"application/ww-digital+json\"\n                        },\n                        \"ExtraMetaData\": [\n                        \t{\n\t\t\t\t\t\t\t\t\"Property\": \"C_CS_FILEFORMATVERSION\",\n\t\t\t\t\t\t\t\t\"Values\": [\n\t\t\t\t\t\t\t\t\t\"2.4\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"__classname__\": \"ExtraMetaData\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"Property\": \"C_CS_COMPONENTSET\",\n\t\t\t\t\t\t\t\t\"Values\": [\n\t\t\t\t\t\t\t\t\t\"df0afd50-9e44-4882-8324-d6e31432ce90\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"__classname__\": \"ExtraMetaData\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n                    \t\"__classname__\": \"MetaData\"\n                    },\n                    \"Files\": [\n                        {\n                            \"Rendition\": \"native\",\n                            \"Type\": \"application/ww-digital+json\",\n                            \"FileUrl\": \"{{Studio_Server_URL}}/transferindex.php?fileguid={{Uuid_For_PUT}}\",\n                            \"__classname__\": \"Attachment\"\n                        }\n                    ],\n                \"__classname__\": \"Object\"\n                }\n                \n            ]\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "A series of calls for creating digital articles within Studio."
		},
		{
			"name": "Misc",
			"item": []
		},
		{
			"name": "Print Articles",
			"item": [
				{
					"name": "Supporting Requests",
					"item": [
						{
							"name": "Upload Transfer Server Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Generate a random UUID",
											"const random_uuid = uuidv4();",
											"  ",
											"function uuidv4() {",
											"    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'",
											"    .replace(/[xy]/g, function (c) {",
											"        const r = Math.random() * 16 | 0, ",
											"            v = c == 'x' ? r : (r & 0x3 | 0x8);",
											"        return v.toString(16);",
											"    });",
											"}",
											"pm.environment.set(\"Uuid_For_PUT\", random_uuid);",
											"",
											"// Print the UUID",
											"console.log(random_uuid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "testfile.json"
									}
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/{{FileUploadUrl}}?ticket={{Current_Ticket}}&fileguid={{Uuid_For_PUT}}",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"{{FileUploadUrl}}"
									],
									"query": [
										{
											"key": "ticket",
											"value": "{{Current_Ticket}}"
										},
										{
											"key": "fileguid",
											"value": "{{Uuid_For_PUT}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Transfer Server Request",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/{{FileUploadUrl}}?ticket={{Current_Ticket}}&fileguid={{Uuid_For_PUT}}&httpmethod=DELETE",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"{{FileUploadUrl}}"
									],
									"query": [
										{
											"key": "ticket",
											"value": "{{Current_Ticket}}"
										},
										{
											"key": "fileguid",
											"value": "{{Uuid_For_PUT}}"
										},
										{
											"key": "httpmethod",
											"value": "DELETE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Download Transfer Server Request",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/{{FileUploadUrl}}?ticket={{Current_Ticket}}&fileguid={{Uuid_For_PUT}}&format=application/ww-digital+json&httpmethod=GET",
									"host": [
										"{{Studio_Server_URL}}"
									],
									"path": [
										"{{Studio_Server_Directory}}",
										"{{FileUploadUrl}}"
									],
									"query": [
										{
											"key": "ticket",
											"value": "{{Current_Ticket}}"
										},
										{
											"key": "fileguid",
											"value": "{{Uuid_For_PUT}}"
										},
										{
											"key": "format",
											"value": "application/ww-digital+json"
										},
										{
											"key": "httpmethod",
											"value": "GET"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CreateObjects Print Article",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"CreateObjects\",\n    \"id\": \"33\",\n    \"params\": [\n        {\n            \"Ticket\": \"{{Current_Ticket}}\",\n            \"Lock\": false,\n            \"Objects\": [\n                {\n                    \"MetaData\": {\n                        \"BasicMetaData\": {\n                            \"Name\": \"testfile-print-2\",\n                            \"Category\": {\n                                \"Name\": \"News\",\n                                \"Id\": 40,\n                                \"__classname__\": \"Category\"\n                            },\n                            \"Type\": \"Article\",\n                            \"Publication\": {\n                                \"Id\": \"25\",\n                                \"Name\": \"WoodWing\",\n                                \"__classname__\": \"Publication\"\n                            },\n                            \"__classname__\": \"BasicMetaData\"\n                        },\n                        \"WorkflowMetaData\": {\n                            \"__classname__\": \"WorkflowMetaData\",\n                            \"Comment\": \"Gapp\",\n                            \"State\": {\n                                \"Id\": \"328\",\n                                \"Name\": \"Draft\",\n                                \"Type\": \"Article\",\n                                \"__classname__\": \"State\"\n                            }\n                        },\n                        \"RightsMetaData\": {\n                            \"__classname__\": \"RightsMetaData\"\n                        },\n                        \"SourceMetaData\": {\n                            \"__classname__\": \"SourceMetaData\"\n                        },\n                        \"ContentMetaData\": {\n                            \"__classname__\": \"ContentMetaData\",\n                            \"Format\": \"application/incopyicml\"\n                        },\n                        \"ExtraMetaData\": [\n                        ],\n                        \"__classname__\": \"MetaData\"\n                    },\n                    \"Relations\": [\n                    ],\n                    \"Pages\": [\n                    ],\n                    \"Files\": [\n                        {\n                            \"Rendition\": \"native\",\n                            \"Type\": \"application/incopyicml\",\n                            \"FileUrl\": \"{{Studio_Server_URL}}/transferindex.php?fileguid={{Uuid_For_PUT}}\",\n                            \"__classname__\": \"Attachment\"\n                        }\n                    ],\n                    \"Elements\": [\n                        {\n                            \"ID\": \"fadca487-ff25-45eb-afb0-2bcd3cf0b6e1\",\n                            \"Name\":\"Body\",\n                            \"LengthWords\": 7,\n                            \"LengthChars\": 33,\n                            \"LengthParas\": 1,\n                            \"LengthLines\": 1,\n                            \"Snippet\": \"This is the body for this article\",\n                            \"Version\": \"1\",\n                            \"Content\": \"This is the body for this article\",\n                            \"__classname__\": \"Element\"\n                        },\n                        {\n                            \"ID\": \"b970882c-e51d-4e41-b46c-98ba0d672813\",\n                            \"Name\":\"Caption\",\n                            \"LengthWords\": 7,\n                            \"LengthChars\": 33,\n                            \"LengthParas\": 1,\n                            \"LengthLines\": 1,\n                            \"Snippet\": \"This is the caption of the article\",\n                            \"Version\": \"1\",\n                            \"Content\": \"This is the caption of the article\",\n                            \"__classname__\": \"Element\"\n                        },\n                        {\n                            \"ID\": \"d2db18e0-a5ea-405a-ae14-69634020460e\",\n                            \"Name\":\"Credit\",\n                            \"LengthWords\": 7,\n                            \"LengthChars\": 33,\n                            \"LengthParas\": 1,\n                            \"LengthLines\": 1,\n                            \"Snippet\": \"This is the credit of the article\",\n                            \"Version\": \"1\",\n                            \"Content\": \"This is the credit of the article\",\n                            \"__classname__\": \"Element\"\n                        },{\n                            \"ID\": \"b3e69023-2a75-4c01-aa65-d742f1d32b57\",\n                            \"Name\":\"Crosshead\",\n                            \"LengthWords\": 7,\n                            \"LengthChars\": 33,\n                            \"LengthParas\": 1,\n                            \"LengthLines\": 1,\n                            \"Snippet\": \"This is the crosshead of the article\",\n                            \"Version\": \"1\",\n                            \"Content\": \"This is the crosshead of the article\",\n                            \"__classname__\": \"Element\"\n                        },\n                        {\n                            \"ID\": \"d2a6831d-3318-48c6-995e-9fd3e00c56e4\",\n                            \"Name\":\"Footer\",\n                            \"LengthWords\": 7,\n                            \"LengthChars\": 33,\n                            \"LengthParas\": 1,\n                            \"LengthLines\": 1,\n                            \"Snippet\": \"This is the footer of the article\",\n                            \"Version\": \"1\",\n                            \"Content\": \"This is the footer of the article\",\n                            \"__classname__\": \"Element\"\n                        },\n                        {\n                            \"ID\": \"04611380-241b-4a41-a0f9-0abae930608a\",\n                            \"Name\":\"Graphic\",\n                            \"LengthWords\": 7,\n                            \"LengthChars\": 33,\n                            \"LengthParas\": 1,\n                            \"LengthLines\": 1,\n                            \"Snippet\": \"This is the graphic of the article\",\n                            \"Version\": \"1\",\n                            \"Content\": \"This is the graphic of the article\",\n                            \"__classname__\": \"Element\"\n                        },{\n                            \"ID\": \"c9df829f-f219-4e38-8b7b-1f3473409c8f\",\n                            \"Name\":\"Head\",\n                            \"LengthWords\": 7,\n                            \"LengthChars\": 33,\n                            \"LengthParas\": 1,\n                            \"LengthLines\": 1,\n                            \"Snippet\": \"This is the head of the article\",\n                            \"Version\": \"1\",\n                            \"Content\": \"This is the head of the article\",\n                            \"__classname__\": \"Element\"\n                        },\n                        {\n                            \"ID\": \"4cdab709-9a4f-4b0a-909e-97092bd81143\",\n                            \"Name\":\"Highlight\",\n                            \"LengthWords\": 7,\n                            \"LengthChars\": 33,\n                            \"LengthParas\": 1,\n                            \"LengthLines\": 1,\n                            \"Snippet\": \"This is the highlight of the article\",\n                            \"Version\": \"1\",\n                            \"Content\": \"This is the highlight of the article\",\n                            \"__classname__\": \"Element\"\n                        },\n                        {\n                            \"ID\": \"34f3df72-5c68-4e76-a594-adc0ea7f3ffb\",\n                            \"Name\":\"Subhead\",\n                            \"LengthWords\": 7,\n                            \"LengthChars\": 33,\n                            \"LengthParas\": 1,\n                            \"LengthLines\": 1,\n                            \"Snippet\": \"This is the subhead of the article\",\n                            \"Version\": \"1\",\n                            \"Content\": \"This is the subhead of the article\",\n                            \"__classname__\": \"Element\"\n                        }\n                    ],\n                    \"Targets\": [\n                    ],\n                    \"MessageList\":{\n                    },\n                    \"ObjectLabels\":[\n                    ],\n                    \"InDesignArticles\":[\n                    ],\n                    \"Placements\":[\n                    ],\n                    \"__classname__\": \"Object\"\n                }\n            ],\n            \"ReplaceGUIDs\": true\n        }\n    ],\n    \"jsonrpc\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Studio_Server_URL}}/{{Studio_Server_Directory}}/index.php?protocol=JSON",
							"host": [
								"{{Studio_Server_URL}}"
							],
							"path": [
								"{{Studio_Server_Directory}}",
								"index.php"
							],
							"query": [
								{
									"key": "protocol",
									"value": "JSON"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "UUID_For_PUT",
			"value": ""
		}
	]
}
